plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.asciidoctor.jvm.convert' version '4.0.3'
}

group = 'zaza'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// spring validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//Jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// database
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.3'

	// devtool
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// rest docs
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'com.h2database:h2'
	testImplementation 'org.springframework.security:spring-security-test'
}


tasks.named('test') {
	useJUnitPlatform()
}

ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'

	sources {
		include("**/index.adoc") // main index doc 만 html로 만들기 위함
	}

	baseDirFollowsSourceFile()

	dependsOn test
}

bootJar {
	from("${asciidoctor.outputDir}"){
		into 'static/docs'
	}

	dependsOn asciidoctor
}
